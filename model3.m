function ddxdt = model3(x)

    g = 9.81;

    %inputs
    d1 = x(1);
    theta_2 = x(2);
    theta_3 = x(3);
    dd1 = x(4);
    dtheta_2 = x(5);
    dtheta_3 = x(6);
    F = [x(7); x(8); x(9)];

    %Constantes
    m2 = 2;
    m3 = 0.6;
    I2 = 2/12;
    I3 = 0.6/12;
    lc2 = 0.5;
    lc3 = 0.5;
    a2 = 1;

    %Simplificações
    s2 = sin(theta_2);
    s3 = sin(theta_3);
    s23 = sin(theta_2+theta_3);
    c2 = cos(theta_2);
    c3 = cos(theta_3);
    c23 = cos(theta_2+theta_3);

    %Desconsideramos a rigidez e a massa dos motores
    %Amortecimento associado ao motores


    %Matriz de inércias (matrix 3x3)
    M = [m2+m3    -m3*(a2*s2+lc3*s23)-lc2*m2*s2   -lc3*m3*s23;
        -m3*(lc3*s23+a2*s2)-lc2*m2*s2     I2+I3+m3*(a2*c2+lc2*c23)*(lc2*c23+a2*c2)+m3*(lc3*s23+a2*s2)*(a2*s2+lc3*s23)+lc2^2*m2*c2*c2+lc2^2*m2*s2*s2           I3+lc2*m3*c23*(lc2*c23+a2*c2)+lc3*m3*s23*(lc3*s23+a2*s2);
        -lc3*m3*s23     I3+lc2*m3*c23*(a2*c2+lc2*c23)+lc3*m3*s23*(a2*s2+lc3*s23)          m3*c23*c23*lc2^2+m3*s23*s23*lc3^2+I3];

    %Vetor de Coriolis e gravidade (vetor 3x1)
    H = [-dtheta_2*(m3*(lc3*c23*(dtheta_2 + dtheta_3) + a2*c2*dtheta_2) + ...
        lc2*m2*c2*dtheta_2) - lc3*m3*c23*dtheta_3*(dtheta_2 + dtheta_3);
        
        dtheta_3*(lc3*m3*s23*(lc3*c23*(dtheta_2 + dtheta_3) + a2*c2*dtheta_2) - ...
        lc2*m3*c23*(lc2*s23*(dtheta_2 + dtheta_3) + a2*s2*dtheta_2) - lc2*m3*s23*(a2*c2 + ...
        lc2*c23)*(dtheta_2 + dtheta_3) + lc3*m3*c23*(dtheta_2 + dtheta_3)*(a2*s2 + lc3*s23)) + ...
        (dtheta_3*(dtheta_3*(2*m3*c23*s23*lc2^2 - 2*m3*c23*s23*lc3^2) + dtheta_2*(lc2*m3*s23*(a2*c2 + ...
        lc2*c23) - lc3*m3*s23*(a2*c2 + lc3*c23) + lc2*m3*c23*(a2*s2 + lc2*s23) - ...
        lc3*m3*c23*(a2*s2 + lc3*s23)) + lc3*m3*c23*dd1))/2 + (((m3*(a2*c2 + lc3*c23) + ...
        lc2*m2*c2)*dtheta_2 + lc3*m3*c23*dtheta_3)*dd1)/2 - (2*m3*(lc2*s23*(dtheta_2 + ...
        dtheta_3) + a2*s2*dtheta_2)*(a2*c2 + lc2*c23) - 2*m3*(lc3*c23*(dtheta_2 + dtheta_3) + ...
        a2*c2*dtheta_2)*(a2*s2 + lc3*s23))*dtheta_2 + (dtheta_2*(dtheta_3*(lc2*m3*s23*(a2*c2 + ...
        lc2*c23) - lc3*m3*s23*(a2*c2 + lc3*c23) + lc2*m3*c23*(a2*s2 + lc2*s23) - ...
        lc3*m3*c23*(a2*s2 + lc3*s23)) + (2*m3*(a2*c2 + lc2*c23)*(a2*s2 + lc2*s23) - ...
        2*m3*(a2*c2 + lc3*c23)*(a2*s2 + lc3*s23))*dtheta_2 + (m3*(a2*c2 + lc3*c23) + ...
        lc2*m2*c2)*dd1))/2 - dd1*(m3*(lc3*c23*(dtheta_2 + dtheta_3) + a2*c2*dtheta_2) + ...
        lc2*m2*c2*dtheta_2) + g*m3*(a2*c2 + lc3*c23) + g*lc2*m2*c2;

         dtheta_2*(lc3*m3*s23*(lc3*c23*(dtheta_2 + dtheta_3) + a2*c2*dtheta_2) - ...
         lc2*m3*c23*(lc2*s23*(dtheta_2 + dtheta_3) + a2*s2*dtheta_2) - lc2*m3*s23*(a2*c2 + ...
         lc2*c23)*(dtheta_2 + dtheta_3) + lc3*m3*c23*(dtheta_2 + dtheta_3)*(a2*s2 + lc3*s23)) + ...
         (dtheta_2*(dtheta_3*(lc2*m3*s23*(a2*c2 + lc2*c23) - lc3*m3*c23*(a2*s2 + lc3*s23) + ...
         lc2^2*m3*c23*s23 - lc3^2*m3*c23*s23) + (2*lc2*m3*s23*(a2*c2 + lc2*c23) - ...
         2*lc3*m3*c23*(a2*s2 + lc3*s23))*dtheta_2 + lc3*m3*c23*dd1))/2 + ((lc3*m3*c23*dtheta_2 + lc3*m3*c23*dtheta_3)*dd1)/2 + ...
         (dtheta_3*(dtheta_3*(2*m3*c23*s23*lc2^2 - 2*m3*c23*s23*lc3^2) + dtheta_2*(lc2*m3*s23*(a2*c2 + ...
         lc2*c23) - lc3*m3*c23*(a2*s2 + lc3*s23) + lc2^2*m3*c23*s23 - lc3^2*m3*c23*s23) + ...
         lc3*m3*c23*dd1))/2 - (2*m3*c23*s23*(dtheta_2 + dtheta_3)*lc2^2 - ...
         2*m3*c23*s23*(dtheta_2 + dtheta_3)*lc3^2)*dtheta_3 + ... 
         g*lc3*m3*c23 - lc3*m3*c23*dd1*(dtheta_2 + dtheta_3)];

    %Isolando a aceleração e fornecendo o output (vetor de três posições)
    ddxdt = inv(M)*(F-H);

end